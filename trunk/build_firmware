#!/bin/sh

ROOTDIR=`pwd`
export ROOTDIR=$ROOTDIR

kernel_id="3.4.x"
kernel_cf=""
kernel_tf=""
uclibc_id="0.9.33.2"
uclibc_cf=""
uclibc_tf="$ROOTDIR/libc/uClibc-${uclibc_id}/.config"
busybox_id="1.24.x"
busybox_cf="$ROOTDIR/configs/boards/busybox.config"
busybox_tf="$ROOTDIR/user/busybox/busybox-${busybox_id}/.config"
board_h=""
board_mk=""
paragon_hfsplus=0

func_enable_kernel_param()
{
	if [ -n "`grep \^\"\# $1 is not set\" $kernel_tf`" ] ; then
		sed -i "s/\# $1 is not set/$1=y/" $kernel_tf
	fi
}

func_disable_kernel_param()
{
	if [ -n "`grep \^$1=y $kernel_tf`" ] ; then
		sed -i "s/$1=y/\# $1 is not set/" $kernel_tf
	elif [ -n "`grep \^$1=m $kernel_tf`" ] ; then
		sed -i "s/$1=m/\# $1 is not set/" $kernel_tf
	fi
}

func_disable_libc_param()
{
	if [ -n "`grep \^$1=y $uclibc_tf`" ] ; then
		sed -i "s/$1=y/\# $1 is not set/" $uclibc_tf
	fi
}

func_enable_busybox_param()
{
	if [ -n "`grep \^\"\# $1 is not set\" $busybox_tf`" ] ; then
		sed -i "s/\# $1 is not set/$1=y/" $busybox_tf
	fi
}

func_disable_busybox_param()
{
	if [ -n "`grep \^$1=y $busybox_tf`" ] ; then
		sed -i "s/$1=y/\# $1 is not set/" $busybox_tf
	fi
}

if [ ! -f "$ROOTDIR/.config" ] ; then
	cp -fv "$ROOTDIR/configs/templates/n56u_dlna.config" "$ROOTDIR/.config"
fi

if [ ! -f "$ROOTDIR/.config" ] ; then
	echo "Project config file .config not found! Terminate."
	exit 1
fi

# load project root config
. $ROOTDIR/.config

# update uclibc version by platform
if [ "$CONFIG_VENDOR" = "Broadcom" ] ; then
uclibc_id="0.9.32.1"
uclibc_tf="$ROOTDIR/libc/uClibc-${uclibc_id}/.config"
fi

if [ ! -f "$ROOTDIR/vendors/$CONFIG_VENDOR/$CONFIG_PRODUCT/config.arch" ] ; then
	echo "Project product dir ($CONFIG_PRODUCT) not found! Terminate."
	exit 1
fi

if [ ! -d "$ROOTDIR/$CONFIG_LINUXDIR" ] ; then
	echo "Project Linux Kernel dir ($CONFIG_LINUXDIR) not found! Terminate."
	exit 1
fi

board_h="$ROOTDIR/configs/boards/$CONFIG_FIRMWARE_PRODUCT_ID/board.h"
board_mk="$ROOTDIR/configs/boards/$CONFIG_FIRMWARE_PRODUCT_ID/board.mk"
uclibc_cf="$ROOTDIR/configs/boards/$CONFIG_FIRMWARE_PRODUCT_ID/libc.config"
kernel_cd="$ROOTDIR/configs/boards/$CONFIG_FIRMWARE_PRODUCT_ID"
kernel_tf="$ROOTDIR/$CONFIG_LINUXDIR/.config"

kernel_id=`echo $CONFIG_LINUXDIR | sed -e 's/linux-//'`

if [ "$CONFIG_FIRMWARE_TYPE_ROOTFS_IN_RAM" = "y" ] ; then
	kernel_cf="${kernel_cd}/kernel-${kernel_id}.ram.config"
else
	kernel_cf="${kernel_cd}/kernel-${kernel_id}.config"
fi

if [ ! -f "$kernel_cf" ] ; then
	echo "Target kernel config ($kernel_cf) not found! Terminate."
	exit 1
fi

if [ ! -f "$uclibc_cf" ] ; then
	echo "Target uClibc config ($uclibc_cf) not found! Terminate."
	exit 1
fi

if [ ! -f "$busybox_cf" ] ; then
	echo "Target BusyBox config ($busybox_cf) not found! Terminate."
	exit 1
fi

if [ ! -f "$board_h" ] ; then
	echo "Target board header ($board_h) not found! Terminate."
	exit 1
fi

if [ ! -f "$board_mk" ] ; then
	echo "Target board descriptor ($board_mk) not found! Terminate."
	exit 1
fi

rm -rf $ROOTDIR/romfs
rm -rf $ROOTDIR/images
mkdir -p $ROOTDIR/romfs
mkdir -p $ROOTDIR/images

# load source kernel config
. "$kernel_cf"

echo --------------------------COPY-CONFIG-----------------------------
######################### FOR-ALL-DEVICES #############################
ln -sf vendors/$CONFIG_VENDOR/$CONFIG_PRODUCT/config.arch config.arch
cp -fL "$kernel_cf" "$kernel_tf"
cp -fL "$uclibc_cf" "$uclibc_tf"
cp -fL "$busybox_cf" "$busybox_tf"
cp -fL "$board_mk" "$ROOTDIR/user/shared/board.mk"
cp -fL "$board_h" "$ROOTDIR/user/shared/include/_board.h"

# load firmware configuration by vendor
if [ "$CONFIG_VENDOR" = "Ralink" ] ; then
	. $ROOTDIR/build_firmware.ralink
elif [ "$CONFIG_VENDOR" = "Broadcom" ] ; then
	. $ROOTDIR/build_firmware.broadcom
else
	echo "Target SoC vendor ($CONFIG_VENDOR) not support! Terminate."
	exit 1
fi

#######################################################################
echo --------------------------MAKE-DEP--------------------------------
make dep
echo --------------------------MAKE-ALL--------------------------------
make
